list_data <- list("Red", "Green", vec1, TRUE, 51.23, 119.1)
list_data
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
#4
names(height) <- rownames(measrs)
names(height)
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
height<-(measrs$col1)
#4
names(height) <
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
height<-(measrs$col1)
#4
names(height) <- rownames(measrs)
names(height)
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
measrs$col1
height<-(measrs$col1)
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
measrs$col1
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
measrs$col2
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
measrs$col2
height <- measrs$col2
height
#1
measrs <- data.frame(gender = c("M", "M","F"), ht = c(172, 186.5, 165), wt = c(91,99, 74))
measrs
#2
colnames(measrs) [1] <- "col1"
colnames(measrs) [2] <- "col2"
colnames(measrs) [3] <- "col3"
measrs
#3
rownames(measrs) [1] <- "row1"
rownames(measrs) [2] <- "row2"
rownames(measrs) [3] <- "row3"
measrs
measrs$col2
height <- measrs$col2
height
#4
names(height) <- rownames(measrs)
names(height)
#5
measrs <- data.frame(measrs, col4=c(28,55,43))
measrs
#6
newattribute <- measrs$col4
names(newattribute) <- rownames(measrs)
newattribute
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#7
df <- data.frame (id = letters[1:10], x = 1:10,y = rnorm(10))
df
#8
cbind(df, data.frame(z = 4))
#9
cbind(df, data.frame(z=11:20, zz=letters[11:20] ))
#10
sport <- c("Hockey", "Baseball", "Football")
league <- c("NHL", "MLB", "NFL")
trophy <- c("Stanley Cup", "Commissioner's Trophy", "Vince Lombardi Trophy")
trophies1 <- cbind(sport, league, trophy)
trophies1
trophies2 <- data.frame(sport=c("Basketball", "Golf"),
league=c("NBA", "PGA"),
trophy=c("Larry O'Brien Championship Trophy","Wanamaker Trophy"),
stringsAsFactors=FALSE)
trophies2
trophies2
trophies <- rbind(trophies1, trophies2)
trophies
set.seed(1234)
my_data <- data.frame(
name = paste0(rep("M_", 10), 1:10),
weight = round(rnorm(10, 20, 2), 1)
)
head(my_data, 10) #1st 10 rows
summary(my_data$weight) #Summary of weight
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggboxplot(my_data$weight,
ylab = "Weight (g)", xlab = FALSE,
ggtheme = theme_minimal())
hamster20 <- t.test(my_data$weight, mu = 20)
hamster20
hamster20 <- t.test(my_data$weight, mu = 20, alternative="greater")
hamster20
hamster20 <- t.test(my_data$weight, mu = 20, alternative="lesser")
hamster20
packageVersion('plotly')
library(plotly)
source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('WQD7004/PrincipleOfDataScienceGroupProject/PrincipleOfDataScienceGroupProject')
runApp('WQD7004/PrincipleOfDataScienceGroupProject/PrincipleOfDataScienceGroupProject')
runApp('WQD7004/PrincipleOfDataScienceGroupProject/PrincipleOfDataScienceGroupProject')
shinyApp(ui, server)
shiny::runApp('WQD7004/PrincipleOfDataScienceGroupProject')
runApp('WQD7004/PrincipleOfDataScienceGroupProject')
runApp('WQD7004/PrincipleOfDataScienceGroupProject')
runApp('WQD7004/PrincipleOfDataScienceGroupProject')
install.packages("leaflet",dependencies=TRUE)
install.packages("RColorBrewer",dependencies=TRUE)
install.packages("scales",dependencies=TRUE)
install.packages("lattice",dependencies=TRUE)
install.packages("dplyr",dependencies=TRUE)
install.packages("dplyr", dependencies = TRUE)
shiny::runApp('WQD7004/PrincipleOfDataScienceGroupProject')
install.packages("leaflet",dependencies=TRUE)
install.packages("leaflet", dependencies = TRUE)
shiny::runApp('WQD7004/PrincipleOfDataScienceGroupProject')
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
math_stu <- read.csv("../student-mat.csv")
math_stu <- read.csv("../WQD7004/student-mat.csv")
port_stu <- read.csv("../WQD7004//student-por.csv")
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
print(head(port_stu))
math_stu <- read.csv("../WQD7004/student-mat.csv")
port_stu <- read.csv("../WQD7004/student-por.csv")
print(head(math_stu))
print(head(port_stu))
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
print(head(math_stu))
print(head(port_stu))
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
port_stu$ClassType <-"Portu"
math_stu$ClassType <- "Math"
port_stu$ClassType <-"Portu"
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
math_stu$ClassType <- "Math"
port_stu$ClassType <-"Portu"
math_stu$ClassType <- "Math"
port_stu$ClassType <-"Portu"
math_stu$ClassType <- "Math"
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
print(head(math_stu))
print(head(port_stu))
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
math_stu$ClassType <- "Math"
port_stu$ClassType <-"Portu"
print(head(math_stu))
print(head(port_stu))
require(dplyr,quietly = TRUE)
list_col <- names(math_stu)
combined_data <- full_join(math_stu,port_stu, by= list_col[c(1:17,19:30)])
library(dplyr)
require(dplyr,quietly = TRUE)
list_col <- names(math_stu)
combined_data <- full_join(math_stu,port_stu, by= list_col[c(1:17,19:30)])
combined_data
math_stu$ClassType <- "Math"
port_stu$ClassType <-"Portu"
require(dplyr,quietly = TRUE)
list_col <- names(math_stu)
combined_data <- full_join(math_stu,port_stu, by= list_col[c(1:17,19:30)])
dim(combined_data)
combined_data
library(dplyr)
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
print(head(math_stu))
print(head(port_stu))
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
math_stu$ClassType <- "Math"
print(head(math_stu))
port_stu$ClassType <-"Portu"
print(head(port_stu))
require(dplyr,quietly = TRUE)
list_col <- names(math_stu)
combined_data <- full_join(math_stu,port_stu, by= list_col[c(1:17,19:30)])
dim(combined_data)
combined_data
require(dplyr,quietly = TRUE)
list_col <- names(port_stu)
combined_data <- full_join(math_stu,port_stu, by= list_col[c(1:17,19:30)])
combined_data
sapply(combined_data, function(x) sum(is.na(x)))
require(Hmisc, quietly = TRUE)
describe(combined_data)
# math students
mat_students=read.csv("../input/student-mat.csv")
mat_students$subject <- "maths"
# portuguesse students
por_students=read.csv("../input/student-por.csv")
por_students$subject <- "portu"
# math students
mat.students <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
mat.students$subject <- "m"
# portuguesse students
por.students <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
por.students$subject <- "p"
# math students
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
math_stu$subject <- "m"
# portuguesse students
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
port_stu$subject <- "p"
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
# math students
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
# portuguesse students
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
math_stu$subject <- "math"
port_stu$subject <- "port"
# combine both datasets
all_students <- rbind(math_stu,port_stu)
nrow_i <- nrow(all_students)
# standarizing column names
colnames(all_students) <- tolower(colnames(all_students))
dup_column <- c("school","sex","age","address","famsize","pstatus","medu",
"fedu","mjob","fjob","reason","nursery","internet")
# subset of duplicated students
dup_all <- students[dup_rowrows,]
# subset of duplicated students
dup_all <- all_students[dup_rowrows,]
# get duplicated rows of the combined dataset
dup_rowrows <- duplicated(students[,dup_column])
# standarizing column names to lowercase
colnames(all_students) <- tolower(colnames(all_students))
# columns which define duplicated students
dup_column <- c("school","sex","age","address","famsize","pstatus","medu",
"fedu","mjob","fjob","reason","nursery","internet")
# get duplicated rows of the combined dataset
dup_row <- duplicated(students[,dup_column])
# get duplicated rows of the combined dataset
dup_row <- duplicated(all_students[,dup_column])
# subset of duplicated students
dup_all <- all_students[dup_rowrows,]
# subset of duplicated students
dup_all <- all_students[dup_row,]
dup_all
dup_subject <- function(dup_all){
# the search for duplicated data in "students" data frame
rows <- all_students$school == dup_all$school &
all_students$sex == dup_all$sex &
all_students$age == dup_all$age &
all_students$address == dup_all$address &
all_students$famsize == dup_all$famsize &
all_students$pstatus == dup_all$pstatus &
all_students$medu == dup_all$medu &
all_students$fedu == dup_all$fedu &
all_students$mjob == dup_all$mjob &
all_students$reason == dup_all$reason &
all_students$nursery == duplicated$nursery &
all_students$internet == dup_all$internet
# change subject to both math and portuguesse
students[rows,"subject"] <<- "math.port"
}
dup_subject <- function(dup_all){
# the search for duplicated data in "students" data frame
rows <- all_students$school == dup_all$school &
all_students$sex == dup_all$sex &
all_students$age == dup_all$age &
all_students$address == dup_all$address &
all_students$famsize == dup_all$famsize &
all_students$pstatus == dup_all$pstatus &
all_students$medu == dup_all$medu &
all_students$fedu == dup_all$fedu &
all_students$mjob == dup_all$mjob &
all_students$reason == dup_all$reason &
all_students$nursery == duplicated$nursery &
all_students$internet == dup_all$internet
# change subject to both math and portuguesse
students[rows,"subject"] <<- "math & port"
}
dup_subject
for(n in 1:nrow(dup_all)){
dup_subject(dup_all[n,])
}
math_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-mat.csv")
paste(c("Dimension Math students :", dim(math_stu)), collapse = " ")
port_stu <- read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/student-por.csv")
paste(c("Dimension Portuguese students :", dim(port_stu)), collapse = " ")
print(head(math_stu))
print(head(port_stu))
unlink('WQD7004/WQD7004_RafiqGuna_cache', recursive = TRUE)
install.packages("randomForest")
install.packages("corrplot")
library(dplyr)
library(tidyr)
library(leaflet)
library(rgdal)
library(DT)
library(plotrix)
install.packages("shinydashboard")
library(shinydashboard)
install.packages("leaflet")
library(leaflet)
install.packages("DT")
library(DT)
install.packages("leaflet")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
library(tidyr)
install.packages("rgdal")
shiny::runApp('C:/Users/gunasegarran.m/Downloads/Population-Hospital')
runApp('C:/Users/gunasegarran.m/Downloads/Population-Hospital')
runApp('C:/Users/gunasegarran.m/Downloads/Population-Hospital')
runApp('C:/Users/gunasegarran.m/Downloads/Population-Hospital')
runApp('C:/Users/gunasegarran.m/Downloads/Population-Hospital')
install.packages("caret")
install.packages("klaR")
install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
mydata = read.csv("../newws.csv")
mydata = read.csv("../newws.csv")
mydata = read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/Machine Learning/newws.csv")
#install.packages("caret")
#install.packages("klaR")
#install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
mydata = read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/Machine Learning/newws.csv")
#install.packages("caret")
#install.packages("klaR")
#install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
mydata
is.na(mydata)
mydata = read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/Machine Learning/newws.csv")
#install.packages("caret")
#install.packages("klaR")
#install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
head(mydata)
is.na(mydata)
mydata[!complete.cases(mydata),]
head(mydata)
## 4.Partition data 70/30 using createDataPartition()
```{r createDataPartition,message=FALSE,echo=TRUE}
split=0.70
trainIndex <- createDataPartition(mydata$diagnosis, p=split, list=FALSE)
mydatatrain <- mydata[ trainIndex,]
mydatatest <- mydata[-trainIndex,]
```
mydata = read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/Machine Learning/newws.csv")
#install.packages("caret")
#install.packages("klaR")
#install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
head(mydata)
is.na(mydata)
mydata[!complete.cases(mydata),]
head(mydata)
split=0.70
trainIndex <- createDataPartition(mydata$diagnosis, p=split, list=FALSE)
mydatatrain <- mydata[ trainIndex,]
mydatatest <- mydata[-trainIndex,]
mydata = read.csv("C:/Users/gunasegarran.m/Documents/WQD7004/Machine Learning/newws.csv")
#install.packages("caret")
#install.packages("klaR")
#install.packages('e1071', dependencies=TRUE)
library(caret)
library(klaR)
head(mydata)
is.na(mydata)
mydata[!complete.cases(mydata),]
head(mydata)
split=0.70
trainIndex <- createDataPartition(mydata$diagnosis, p=split, list=FALSE)
mydatatrain <- mydata[ trainIndex,]
mydatatest <- mydata[-trainIndex,]
dim(mydatatrain)
dim(mydatatest)
train_control <- trainControl(method="cv", number=10)
model <- train(diagnosis ~., data = mydatatest, method = "knn",
trControl=train_control,
preProcess = c("center", "scale"),
tuneLength = 10)
print(model)
plot(model)
test_predict <- predict(model, newdata = mydatatest)
test_predict
confusionMatrix(test_predict, mydatatest$diagnosis )
shiny::runApp('WQD7001/Public-Healthcare-Services-vs-Population-in-Malaysia')
runApp('WQD7001/Public-Healthcare-Services-vs-Population-in-Malaysia')
shiny::runApp()
